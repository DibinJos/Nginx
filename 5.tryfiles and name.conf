# Try files runs one of the url from the list preceding the try_file 
# Try files try the url relative the root one after the other 
# and the last, only the last paramater is eligible for rewrite


events{}

http {
    include mime.types

    server{
        listen 80
        server_name 52.230.127.28
        root /home/eybcadmin/sites/demo

        # So the try file check for the files relative to root(/home/eybcadmin/sites/demo) and goes on checking from left to right to find a match to display
        # And only the last value in the list is eligible for rewrite
        # The below try_files displays thumb.png
        try_files /thumb.png /greet

    
        # The below try_files displays "From greet as {root}/cat.png is available"
        try_files /thumb.png /greet

        # The below try_files displays "From greet as {root}/cat.png is available"
        try_files /thumb.png /greet

        # $uri in the begining makes sure that if the URL called is directly accessible,
        # if not then only it moves on to check other URI in the list i.e cat.png greet etc
        # In this "No such file found" gets printed  as the last parameter gets redwritten
        try_files $uri  /cat.png  /greet /friendly_404 #we can also name the routes by @friendly_404

        location /greet {
            return 200 "From greet location"
        }

         location /friendly_404{ # @friendly_404 
            return 404 "No such file found"
        }
        
    }
}
