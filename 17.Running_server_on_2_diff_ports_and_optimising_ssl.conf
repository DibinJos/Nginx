# We can make the server to appear to run on two diff port by redirecting the requets.
# Let's say we need the server to listen to both http://10.23.34.34(Port 80) as well as https://10.23.34.34(Port 443)
# So we can redirect all the request directed to http://10.23.34.34(Port 80) to https://10.23.34.34(Port 443)


user www-data;

worker_processes auto;

events {
  worker_connections 1024;
}

http {

  include mime.types;

  server{

      listen 80;
      server_name 167.99.93.26;

      return 301 https://$host/$equest_uri;  #This basically redirects to the server below


  }


  server {

    listen 443 ssl http2;
    server_name 167.99.93.26;

    root home/eybcadmin/demo;

    index index.html index.php;

    ssl_certificate /etc/nginx/ssl/self.crt;
    ssl_certificate_key /etc/nginx/ssl/self.key; 

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #To use TLS protocol instead of ssl

    # Optimise cipher suits
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5; #For proper encryption

    # Enable DH Params
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;  #Deffie Helman key exchanges i.e the key exchanges between client and server are done iwth utmost secrecy

      # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000" always; #Emable Security Trnansport service in which max-age is number of seconds in an year and is set to always

    # SSL sessions
    ssl_session_cache shared:SSL:40m; # To use a shared cache of 40MB which can acceses by multiples worker process
    ssl_session_timeout 4h; # How long should the data be cached
    ssl_session_tickets on; # Inorder to use session cache without server actually accessing the cache,we can set the ticket to ON(ticket is provided by the server to the browser)  


    location / {
      try_files $uri $uri/ =404;
    }

     location = /index.html {
      http2_push /style.css;
      http2_push /thumbs.png; # So basically it pushes the content as response when client request for index
    }

    location ~\.php$ {
      # Pass php requests to the php-fpm service (fastcgi)
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.1-fpm.sock;
    }


  }
}
