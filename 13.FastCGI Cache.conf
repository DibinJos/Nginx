# It is basically to cache the data and it can only be used to cache the php data

user www-data;

worker_processes auto;

load_module modules/ngx_http_image_filter_module.so;

events {
  worker_connections 1024;
}

http {

include mime.types;

#Fast cgi cache path are used to store/cache the response from php/mysql to the nginx(client->nginx->php+mysql)
# So that the next time the client makes the request, nginx need not get the data from php rather can respond from the cache itself
fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m
# cache path is the location where we need to cache data(choose /tmp as ubuntu clears off tmp for every reboot)
                                               # And levels is used to structure the data
                                               # So in this case level 1:2 makes a folder with last 1 character of the cache data and then again creates a sub folder with last two characters of th cache
                                               # for eg for 30erjhhdjhajjaj1232346 cache data  it creates a folder with 6 and a sub folder with 34
                                               # Structure in /tmp/nginx_cache 6----
                                               #                                   |
                                               #                                    34---
                                               #                                         |  
                                               #                                          30erjhhdjhajjaj1232346                                                                                 
#key_zone is the name of the cache storage which would be of 100m(megabytes) 
#inactive=60m to make te cache inactive after 60 minutes

fastcgi_cache_key "$scheme$request_method$host$request_uri"

#This is would the key to check the request and deliver it from cache
# So a request with http://get 12.33.11.33/some/path 
# $scheme = http
# $request_method = GET
# $host = 12.33.11.33
# $request_uri = /some/path 

add_header X-Cache $upstream_cache_status #This varible has value HIT and MISS and BYPASSto show in the response header
                                           #That if the response is rendered from the cache

  server {

    listen 80;
    server_name 167.99.93.26;

    root /sites/demo;

    index index.php index.html;

    location / {
      try_files $uri $uri/ =404;
    }

    location ~\.php$ {
      # Pass php requests to the php-fpm service (fastcgi)
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.1-fpm.sock;

      fastcgi_cache ZONE_1;
      fastcgi_cache_valid 200 60m;  #Cache valid only if the status code is 200 and the cache would only be valid for 60m 
      fastcgi_cache_bypass 0        #<optional to switch the cache on-off>To bypass cache or not to get data from the cache 0 is true and 1 is false
      fastcgi_no_cache 0            #<optional to save/not save the response>To not store value in the cache 0 is true and 1 is false
    }

  }
}

# To test the servers - sudo apt-get install apache2-utils
# ab -n 100 -c 10 http://13.23.24.34/ ====> This is 100 request with concurrency of 10 which meams we will have 10 requests hitting the server 10 times(10*10 = 100)


